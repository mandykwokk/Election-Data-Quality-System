{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mandy\\\\IdeaProjects\\\\DataQuality-Frontend\\\\src\\\\components\\\\map\\\\RightPanel\\\\PanelCharts\\\\Election.js\";\nimport React, { useContext, useState } from 'react';\nimport { Divider, Popover, Typography, Table } from 'antd';\nimport Slider from \"react-slick\";\nimport { Pie } from 'react-chartjs-2';\nimport * as Constants from 'constants/constants';\nimport HistoryContext from 'contexts/HistoryContext';\nconst {\n  Paragraph\n} = Typography;\nexport default function Election(props) {\n  const handleAddHistory = useContext(HistoryContext).handleAddHistory;\n  const [rerender, setRerender] = useState(false);\n  const columns = [{\n    title: 'Party',\n    dataIndex: 'party',\n    key: 'party'\n  }, {\n    title: 'Votes',\n    dataIndex: 'votes',\n    key: 'votes',\n    render: (votes, record, index) => React.createElement(Paragraph, {\n      editable: {\n        onChange: value => onChange(value, index)\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, votes + \"\"),\n    width: 100\n  }, {\n    title: 'Percent',\n    dataIndex: 'percent',\n    key: 'percent'\n  }];\n  const sum = props.data.reduce((a, b) => a + b);\n  const data = props.data.map((item, index) => {\n    return {\n      key: index,\n      party: Constants.PARTIES[index],\n      votes: item,\n      percent: (item / sum * 100).toFixed(1)\n    };\n  });\n\n  function onChange(value, index) {\n    props.data[index] = Number(value);\n    handleAddHistory(`Changed ${props.name}'s ${Constants.PARTIES[index]} votes to ${value}`);\n    setRerender(!rerender);\n  }\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    className: \"chartHeader\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Election Data\"), React.createElement(Popover, {\n    placement: \"topRight\",\n    title: \"Source of Data\",\n    content: React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Harvard Election Data Archive\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"sourceText\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"sourceBg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Source of Data\"))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(Slider, {\n    arrows: false,\n    dots: true,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(Pie, {\n    data: {\n      labels: Constants.PARTIES,\n      datasets: [{\n        data: data.map(item => item.votes),\n        backgroundColor: ['#FF6384', '#36A2EB', '#B2EB70', '#FFCE56'],\n        hoverBackgroundColor: ['#FF6384', '#36A2EB', '#B2EB70', '#FFCE56']\n      }]\n    },\n    borderWidth: 100,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(Table, {\n    columns: columns,\n    dataSource: data,\n    pagination: false,\n    size: 'small',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["C:/Users/mandy/IdeaProjects/DataQuality-Frontend/src/components/map/RightPanel/PanelCharts/Election.js"],"names":["React","useContext","useState","Divider","Popover","Typography","Table","Slider","Pie","Constants","HistoryContext","Paragraph","Election","props","handleAddHistory","rerender","setRerender","columns","title","dataIndex","key","render","votes","record","index","onChange","value","width","sum","data","reduce","a","b","map","item","party","PARTIES","percent","toFixed","Number","name","labels","datasets","backgroundColor","hoverBackgroundColor"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport { Divider, Popover, Typography, Table } from 'antd';\r\nimport Slider from \"react-slick\";\r\nimport { Pie } from 'react-chartjs-2';\r\nimport * as Constants from 'constants/constants';\r\nimport HistoryContext from 'contexts/HistoryContext';\r\n\r\nconst { Paragraph } = Typography;\r\n\r\nexport default function Election(props) {\r\n    const handleAddHistory = useContext(HistoryContext).handleAddHistory;\r\n    const [rerender, setRerender] = useState(false);\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Party',\r\n            dataIndex: 'party',\r\n            key: 'party'\r\n        },\r\n        {\r\n            title: 'Votes',\r\n            dataIndex: 'votes',\r\n            key: 'votes',\r\n            render: (votes, record, index) => (\r\n                <Paragraph editable={{ onChange: value => onChange(value, index)}}>{votes+\"\"}</Paragraph>\r\n            ),\r\n            width: 100\r\n        },\r\n        {\r\n            title: 'Percent',\r\n            dataIndex: 'percent',\r\n            key: 'percent',\r\n        }\r\n    ];\r\n\r\n    const sum = props.data.reduce((a, b) => a + b);\r\n    const data = props.data.map((item, index) => {\r\n        return {\r\n            key: index,\r\n            party: Constants.PARTIES[index],\r\n            votes: item,\r\n            percent: (item/sum*100).toFixed(1)\r\n        }\r\n    });\r\n\r\n    function onChange(value, index) {\r\n        props.data[index] = Number(value);\r\n        handleAddHistory(`Changed ${props.name}'s ${Constants.PARTIES[index]} votes to ${value}`);\r\n        setRerender(!rerender);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Divider />\r\n            <h1 className=\"chartHeader\">Election Data</h1>\r\n            <Popover\r\n                placement=\"topRight\" \r\n                title={\"Source of Data\"}\r\n                content={<p>Harvard Election Data Archive</p>}\r\n            >\r\n                <p className=\"sourceText\"><span className=\"sourceBg\">Source of Data</span></p>\r\n            </Popover>\r\n            <br />\r\n            <Slider \r\n                arrows={false}\r\n                dots={true}\r\n                infinite={true}\r\n                speed={500}\r\n                slidesToShow={1}\r\n                slidesToScroll={1}\r\n            >\r\n                <Pie \r\n                    data={{\r\n                        labels: Constants.PARTIES,\r\n                        datasets: [{\r\n                            data: data.map(item => item.votes),\r\n                            backgroundColor: [\r\n                                '#FF6384',\r\n                                '#36A2EB',\r\n                                '#B2EB70',\r\n                                '#FFCE56',\r\n                    \r\n                            ],\r\n                            hoverBackgroundColor: [\r\n                                '#FF6384',\r\n                                '#36A2EB',\r\n                                '#B2EB70',\r\n                                '#FFCE56',\r\n                            ]\r\n                        }]\r\n                    }\r\n                    }\r\n                    borderWidth = {100}\r\n                />\r\n                <Table\r\n                    columns={columns}\r\n                    dataSource={data}\r\n                    pagination={false}\r\n                    size={'small'}\r\n                />\r\n            </Slider>\r\n        </React.Fragment>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}