{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mandy\\\\IdeaProjects\\\\DataQuality-Frontend\\\\src\\\\components\\\\map\\\\RightPanel\\\\PrecinctTab.js\";\nimport React, { useState } from 'react';\nimport { List, Divider, Popover, Typography, message } from 'antd';\nimport Demographic from './PanelCharts/Demographic';\nimport Election from './PanelCharts/Election';\nimport * as Constants from 'constants/constants';\nimport PrecinctRequester from 'requesters/PrecinctRequester';\nconst {\n  Paragraph\n} = Typography;\nconst precinctRequester = new PrecinctRequester();\nexport default function PrecinctTab(props) {\n  const [rerender, setRerender] = useState(false);\n\n  async function onChange(value) {\n    if (await precinctRequester.updateName(props.selectedPrecinct.id, value)) {\n      props.selectedPrecinct.name = value;\n      message.success(\"Sucessfully changed name\");\n      setRerender(!rerender);\n    } else {\n      message.error(\"Failed to change name\");\n    }\n  }\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(Popover, {\n    placement: \"topRight\",\n    title: \"Precinct Boundary Source\",\n    content: React.createElement(React.Fragment, null, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"US Census\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"https://www2.census.gov/geo/pvs/tiger2010st\")),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"sourceText\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"sourceBg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Precinct Boundary Source\"))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"infoPane\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Precinct:\", props.selectedPrecinct.countyName === \" N/A\" ? React.createElement(Paragraph, {\n    style: {\n      display: \"inline\"\n    },\n    editable: {\n      onChange: value => onChange(value)\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, props.selectedPrecinct.name) : props.selectedPrecinct.name), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"District: \", props.selectedPrecinct.districtName), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"County: \", props.selectedPrecinct.countyName), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"id: \", props.selectedPrecinct.id)), React.createElement(Election, {\n    data: props.selectedPrecinct.elections,\n    name: props.selectedPrecinct.id,\n    region: props.selectedPrecinct,\n    editable: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(Demographic, {\n    data: props.selectedPrecinct.demographic,\n    precinct: props.selectedPrecinct,\n    editable: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    className: \"chartHeader\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Errors\"), React.createElement(List, {\n    itemLayout: \"horizontal\",\n    dataSource: props.selectedPrecinct.errors,\n    renderItem: item => React.createElement(List.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(List.Item.Meta, {\n      title: Constants.ERROR_HEADER[Constants.ERROR_ENUM.indexOf(item.category)].replace(\"Precincts\", \"Precinct\"),\n      description: item.description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["C:/Users/mandy/IdeaProjects/DataQuality-Frontend/src/components/map/RightPanel/PrecinctTab.js"],"names":["React","useState","List","Divider","Popover","Typography","message","Demographic","Election","Constants","PrecinctRequester","Paragraph","precinctRequester","PrecinctTab","props","rerender","setRerender","onChange","value","updateName","selectedPrecinct","id","name","success","error","countyName","display","districtName","elections","demographic","errors","item","ERROR_HEADER","ERROR_ENUM","indexOf","category","replace","description"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { List, Divider, Popover, Typography, message } from 'antd';\r\nimport  Demographic  from './PanelCharts/Demographic';\r\nimport  Election  from './PanelCharts/Election';\r\nimport * as Constants from 'constants/constants';\r\nimport PrecinctRequester from 'requesters/PrecinctRequester';\r\n\r\nconst { Paragraph } = Typography;\r\nconst precinctRequester = new PrecinctRequester();\r\n\r\nexport default function PrecinctTab(props) {\r\n    const [rerender, setRerender] = useState(false);\r\n\r\n    async function onChange(value) {\r\n        if (await precinctRequester.updateName(props.selectedPrecinct.id, value)) {\r\n            props.selectedPrecinct.name = value;\r\n            message.success(\"Sucessfully changed name\");\r\n            setRerender(!rerender);\r\n        }\r\n        else {\r\n            message.error(\"Failed to change name\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Popover\r\n                placement=\"topRight\" \r\n                title={\"Precinct Boundary Source\"}\r\n                content=\r\n                {\r\n                    <>\r\n                        <p>US Census</p>\r\n                        <p>https://www2.census.gov/geo/pvs/tiger2010st</p>\r\n                    </>\r\n                }\r\n            >\r\n                <p className=\"sourceText\"><span className=\"sourceBg\">Precinct Boundary Source</span></p>\r\n            </Popover>\r\n            <br />\r\n            <div className=\"infoPane\">\r\n                <h1>Precinct:  \r\n                     {props.selectedPrecinct.countyName === \" N/A\"\r\n                    ?\r\n                    <Paragraph style={{display: \"inline\"}} editable={{ onChange: value => onChange(value)}}>{ props.selectedPrecinct.name}</Paragraph>\r\n                    : props.selectedPrecinct.name}\r\n                </h1>\r\n                <h1>District: {props.selectedPrecinct.districtName}</h1>\r\n                <h1>County: {props.selectedPrecinct.countyName}</h1>\r\n                <h1>id: {props.selectedPrecinct.id}</h1>\r\n            </div>\r\n            <Election data={props.selectedPrecinct.elections} name={props.selectedPrecinct.id} region={props.selectedPrecinct} editable={true}/>\r\n            <Demographic data={props.selectedPrecinct.demographic} precinct={props.selectedPrecinct} editable={true}/>\r\n            <Divider />\r\n            <h1 className=\"chartHeader\">Errors</h1>\r\n            <List\r\n                itemLayout=\"horizontal\"\r\n                dataSource={props.selectedPrecinct.errors}\r\n                renderItem={item => (\r\n                    <List.Item>\r\n                        <List.Item.Meta\r\n                            title={Constants.ERROR_HEADER[Constants.ERROR_ENUM.indexOf(item.category)].replace(\"Precincts\", \"Precinct\")}\r\n                            description={item.description}\r\n                        />\r\n                    </List.Item>\r\n                )}\r\n            />\r\n        </React.Fragment>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}