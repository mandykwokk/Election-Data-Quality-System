{"ast":null,"code":"import Axios from 'axios';\nexport default class PrecinctRequester {\n  async updateDemographic(precinctId, demographic) {\n    try {\n      await Axios.post(`/precinct/${precinctId}/demo`, demographic);\n      return true;\n    } catch (error) {\n      console.log(error);\n      return false;\n    }\n  }\n\n  async updateGhostPrecinct(precinctId) {\n    try {\n      await Axios.post(`/precinct/${precinctId}/ghost`);\n      return true;\n    } catch (error) {\n      console.log(error);\n      return false;\n    }\n  }\n\n  async updateBoundary(precinctId, newBoundary) {\n    const config = {\n      header: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      await Axios.post(`/precinct/${precinctId}/boundary`, {\n        geojson: newBoundary\n      }, config);\n      return true;\n    } catch (error) {\n      console.log(error);\n      return false;\n    }\n  }\n\n  async updateNeighbor(precinctId, targetId, addingNeighbor) {\n    try {\n      let add;\n      if (addingNeighbor) add = 1;else add = 0;\n      await Axios.post(`/precinct/${precinctId}/neighbor`, {\n        targetPrecinctId: targetId,\n        toAdd: add\n      });\n      return true;\n    } catch (error) {\n      console.log(error);\n      return false;\n    }\n  }\n\n  async updatePrecinctElection(precinctId, electionString) {\n    try {\n      await Axios.post(`/precinct/${precinctId}/election`, {\n        electionString: electionString\n      });\n      return true;\n    } catch (error) {\n      console.log(error);\n      return false;\n    }\n  }\n\n}","map":{"version":3,"sources":["C:/Users/mandy/IdeaProjects/DataQuality-Frontend/src/requesters/PrecinctRequester.js"],"names":["Axios","PrecinctRequester","updateDemographic","precinctId","demographic","post","error","console","log","updateGhostPrecinct","updateBoundary","newBoundary","config","header","geojson","updateNeighbor","targetId","addingNeighbor","add","targetPrecinctId","toAdd","updatePrecinctElection","electionString"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,iBAAN,CAAwB;AACnC,QAAMC,iBAAN,CAAwBC,UAAxB,EAAoCC,WAApC,EAAiD;AAC7C,QAAI;AACA,YAAMJ,KAAK,CAACK,IAAN,CAAY,aAAYF,UAAW,OAAnC,EAA2CC,WAA3C,CAAN;AACA,aAAO,IAAP;AACH,KAHD,CAIA,OAAOE,KAAP,EAAc;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,aAAO,KAAP;AACH;AACJ;;AAED,QAAMG,mBAAN,CAA0BN,UAA1B,EAAsC;AAClC,QAAI;AACA,YAAMH,KAAK,CAACK,IAAN,CAAY,aAAYF,UAAW,QAAnC,CAAN;AACA,aAAO,IAAP;AACH,KAHD,CAGE,OAAOG,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,aAAO,KAAP;AACH;AACJ;;AAED,QAAMI,cAAN,CAAqBP,UAArB,EAAiCQ,WAAjC,EAA8C;AAC1C,UAAMC,MAAM,GAAG;AAAEC,MAAAA,MAAM,EAAE;AAAE,wBAAgB;AAAlB;AAAV,KAAf;;AACA,QAAI;AACA,YAAMb,KAAK,CAACK,IAAN,CAAY,aAAYF,UAAW,WAAnC,EAA+C;AAAEW,QAAAA,OAAO,EAAEH;AAAX,OAA/C,EAAyEC,MAAzE,CAAN;AACA,aAAO,IAAP;AACH,KAHD,CAGE,OAAON,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,aAAO,KAAP;AACH;AACJ;;AAED,QAAMS,cAAN,CAAqBZ,UAArB,EAAiCa,QAAjC,EAA2CC,cAA3C,EAA2D;AACvD,QAAI;AACA,UAAIC,GAAJ;AACA,UAAGD,cAAH,EACIC,GAAG,GAAG,CAAN,CADJ,KAGIA,GAAG,GAAG,CAAN;AACJ,YAAMlB,KAAK,CAACK,IAAN,CAAY,aAAYF,UAAW,WAAnC,EAA+C;AAACgB,QAAAA,gBAAgB,EAAEH,QAAnB;AAA6BI,QAAAA,KAAK,EAAEF;AAApC,OAA/C,CAAN;AACA,aAAO,IAAP;AACH,KARD,CASA,OAAOZ,KAAP,EAAc;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,aAAO,KAAP;AACH;AACJ;;AAED,QAAMe,sBAAN,CAA6BlB,UAA7B,EAAyCmB,cAAzC,EAAyD;AACrD,QAAI;AACA,YAAMtB,KAAK,CAACK,IAAN,CAAY,aAAYF,UAAW,WAAnC,EAA+C;AAACmB,QAAAA,cAAc,EAAEA;AAAjB,OAA/C,CAAN;AACA,aAAO,IAAP;AACH,KAHD,CAIA,OAAOhB,KAAP,EAAc;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,aAAO,KAAP;AACH;AACJ;;AA1DkC","sourcesContent":["import Axios from 'axios';\r\n\r\nexport default class PrecinctRequester {\r\n    async updateDemographic(precinctId, demographic) {\r\n        try {\r\n            await Axios.post(`/precinct/${precinctId}/demo`, demographic);\r\n            return true;\r\n        }\r\n        catch (error) {\r\n            console.log(error);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    async updateGhostPrecinct(precinctId) {\r\n        try {\r\n            await Axios.post(`/precinct/${precinctId}/ghost`);\r\n            return true;\r\n        } catch (error) {\r\n            console.log(error);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    async updateBoundary(precinctId, newBoundary) {\r\n        const config = { header: { 'Content-Type': 'application/json' } };\r\n        try {\r\n            await Axios.post(`/precinct/${precinctId}/boundary`, { geojson: newBoundary }, config);\r\n            return true;\r\n        } catch (error) {\r\n            console.log(error);\r\n            return false;\r\n        }\r\n    }\r\n    \r\n    async updateNeighbor(precinctId, targetId, addingNeighbor) {\r\n        try {\r\n            let add;\r\n            if(addingNeighbor)\r\n                add = 1;\r\n            else\r\n                add = 0;\r\n            await Axios.post(`/precinct/${precinctId}/neighbor`, {targetPrecinctId: targetId, toAdd: add});\r\n            return true;\r\n        }\r\n        catch (error) {\r\n            console.log(error);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    async updatePrecinctElection(precinctId, electionString) {\r\n        try {\r\n            await Axios.post(`/precinct/${precinctId}/election`, {electionString: electionString});\r\n            return true;\r\n        }\r\n        catch (error) {\r\n            console.log(error);\r\n            return false;\r\n        }\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}