{"ast":null,"code":"import Axios from 'axios';\nexport default class PrecinctRequester {\n  async updateName(precinctId, newName) {\n    const config = {\n      header: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      await Axios.post(`/precinct/${precinctId}/name`, {\n        name: newName\n      }, config);\n      return true;\n    } catch (error) {\n      console.log(error);\n      return false;\n    }\n  }\n\n  async addNewPrecinct(precinct) {\n    try {\n      let res = await Axios.post(`/precinct/generate`, precinct);\n      return res.data;\n    } catch (error) {\n      console.log(error);\n      return false;\n    }\n  }\n\n  async updateDemographic(precinctId, demographic) {\n    try {\n      await Axios.post(`/precinct/${precinctId}/demo`, demographic);\n      return true;\n    } catch (error) {\n      console.log(error);\n      return false;\n    }\n  }\n\n  async updateGhostPrecinct(precinctId) {\n    try {\n      await Axios.post(`/precinct/${precinctId}/ghost`);\n      return true;\n    } catch (error) {\n      console.log(error);\n      return false;\n    }\n  }\n\n  async updateBoundary(precinctId, newBoundary) {\n    const config = {\n      header: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      await Axios.post(`/precinct/${precinctId}/boundary`, {\n        geojson: newBoundary\n      }, config);\n      return true;\n    } catch (error) {\n      console.log(error);\n      return false;\n    }\n  }\n\n  async updateNeighbor(precinctId, targetId, addingNeighbor) {\n    try {\n      let add;\n      if (addingNeighbor) add = 1;else add = 0;\n      await Axios.post(`/precinct/${precinctId}/neighbor`, {\n        targetPrecinctId: targetId,\n        toAdd: add\n      });\n      return true;\n    } catch (error) {\n      console.log(error);\n      return false;\n    }\n  }\n\n  async updateElection(precinctId, electionJson, districtElectionJson, stateElectionJson, toPropagate) {\n    try {\n      await Axios.post(`/precinct/election/${precinctId}/${toPropagate}`, {\n        electionJson: electionJson,\n        districtElectionJson: districtElectionJson,\n        stateElectionJson: stateElectionJson\n      });\n      return true;\n    } catch (error) {\n      console.log(error);\n      return false;\n    }\n  }\n\n  async updatePrecinct(precinct) {\n    try {\n      await Axios.post(`/precinct/update`, {\n        id: precinct.id,\n        geometry: precinct.geometry,\n        originalGeometry: precinct.geometry\n      });\n      return true;\n    } catch (error) {\n      console.log(error);\n      return false;\n    }\n  }\n\n  async updateOriginalBoundary(precinctId, newBoundary) {\n    const config = {\n      header: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      await Axios.post(`/precinct/${precinctId}/original-boundary`, {\n        geojson: newBoundary\n      }, config);\n      return true;\n    } catch (error) {\n      console.log(error);\n      return false;\n    }\n  }\n\n}","map":{"version":3,"sources":["C:/Users/mandy/IdeaProjects/DataQuality-Frontend/src/requesters/PrecinctRequester.js"],"names":["Axios","PrecinctRequester","updateName","precinctId","newName","config","header","post","name","error","console","log","addNewPrecinct","precinct","res","data","updateDemographic","demographic","updateGhostPrecinct","updateBoundary","newBoundary","geojson","updateNeighbor","targetId","addingNeighbor","add","targetPrecinctId","toAdd","updateElection","electionJson","districtElectionJson","stateElectionJson","toPropagate","updatePrecinct","id","geometry","originalGeometry","updateOriginalBoundary"],"mappings":"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","sourcesContent":["import Axios from 'axios';\r\n\r\nexport default class PrecinctRequester {\r\n\r\n    async updateName(precinctId, newName) {\r\n        const config = { header: { 'Content-Type': 'application/json' } };\r\n        try {\r\n            await Axios.post(`/precinct/${precinctId}/name`, { name : newName}, config);\r\n            return true;\r\n        }\r\n        catch (error) {\r\n            console.log(error);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    async addNewPrecinct(precinct) {\r\n        try {\r\n            let res = await Axios.post(`/precinct/generate`, precinct);\r\n            return res.data;\r\n        }\r\n        catch (error) {\r\n            console.log(error);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    async updateDemographic(precinctId, demographic) {\r\n        try {\r\n            await Axios.post(`/precinct/${precinctId}/demo`, demographic);\r\n            return true;\r\n        }\r\n        catch (error) {\r\n            console.log(error);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    async updateGhostPrecinct(precinctId) {\r\n        try {\r\n            await Axios.post(`/precinct/${precinctId}/ghost`);\r\n            return true;\r\n        } catch (error) {\r\n            console.log(error);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    async updateBoundary(precinctId, newBoundary) {\r\n        const config = { header: { 'Content-Type': 'application/json' } };\r\n        try {\r\n            await Axios.post(`/precinct/${precinctId}/boundary`, { geojson: newBoundary }, config);\r\n            return true;\r\n        } catch (error) {\r\n            console.log(error);\r\n            return false;\r\n        }\r\n    }\r\n    \r\n    async updateNeighbor(precinctId, targetId, addingNeighbor) {\r\n        try {\r\n            let add;\r\n            if(addingNeighbor)\r\n                add = 1;\r\n            else\r\n                add = 0;\r\n            await Axios.post(`/precinct/${precinctId}/neighbor`, {targetPrecinctId: targetId, toAdd: add});\r\n            return true;\r\n        }\r\n        catch (error) {\r\n            console.log(error);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    async updateElection(precinctId, electionJson, districtElectionJson, stateElectionJson, toPropagate) {\r\n        try {\r\n            await Axios.post(`/precinct/election/${precinctId}/${toPropagate}`, {electionJson: electionJson, districtElectionJson:districtElectionJson, stateElectionJson: stateElectionJson});\r\n            return true;\r\n        }\r\n        catch (error) {\r\n            console.log(error);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    async updatePrecinct(precinct) {\r\n        try {\r\n            await Axios.post(`/precinct/update`, {id: precinct.id, geometry: precinct.geometry, originalGeometry: precinct.geometry});\r\n            return true;\r\n        }\r\n        catch (error) {\r\n            console.log(error);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    async updateOriginalBoundary(precinctId, newBoundary) {\r\n        const config = { header: { 'Content-Type': 'application/json' } };\r\n        try {\r\n            await Axios.post(`/precinct/${precinctId}/original-boundary`, { geojson: newBoundary }, config);\r\n            return true;\r\n        } catch (error) {\r\n            console.log(error);\r\n            return false;\r\n        }\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}