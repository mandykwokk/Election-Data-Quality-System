{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mandy\\\\IdeaProjects\\\\DataQuality-Frontend\\\\src\\\\components\\\\map\\\\HeaderPanel\\\\HeaderPanel.js\";\nimport React, { useContext, useState } from 'react';\nimport L from 'leaflet';\nimport { Button, Menu, Dropdown } from 'antd';\nimport { DownOutlined, AliwangwangOutlined, MergeCellsOutlined, UsergroupAddOutlined, UndoOutlined, EditOutlined, DeleteOutlined, SaveOutlined, EnvironmentOutlined, CalendarOutlined, FormOutlined, SplitCellsOutlined, UsergroupDeleteOutlined } from '@ant-design/icons';\nimport StateContext from 'contexts/StateContext';\nimport * as Constants from 'constants/constants';\nimport { message } from 'antd';\nexport default function HeaderPanel(props) {\n  const selectedState = useContext(StateContext);\n  const [selectedElection, setSelectedElection] = useState(Constants.ELECTIONS[0]);\n\n  function getSum() {\n    let sum = 0;\n\n    if (props.selectedPrecinct) {\n      if (props.selectedPrecinct.name.includes(\"Potential\")) {\n        for (let i in props.selectedPrecinct.demographic) {\n          sum += props.selectedPrecinct.demographic[i];\n        }\n\n        return sum;\n      }\n    }\n\n    return 1;\n  }\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Dropdown, {\n    overlay: React.createElement(Menu, {\n      onClick: ({\n        key\n      }) => props.handleStateChangeDropdown(key),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, Constants.STATES.map(state => {\n      return React.createElement(Menu.Item, {\n        key: state,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(EnvironmentOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), state);\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"locationDiv\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"primary\",\n    icon: React.createElement(EnvironmentOutlined, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }),\n    shape: \"round\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, selectedState && selectedState.name || 'Select a State', \" \", React.createElement(DownOutlined, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })))), React.createElement(Dropdown, {\n    overlay: React.createElement(Menu, {\n      onClick: ({\n        key\n      }) => setSelectedElection(key),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, Constants.ELECTIONS.map(election => {\n      message.info(selectedElection);\n      return React.createElement(Menu.Item, {\n        key: election,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(CalendarOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), \" \", election);\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"electionDiv\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"primary\",\n    icon: React.createElement(CalendarOutlined, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }),\n    shape: \"round\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, selectedElection, \" \", React.createElement(DownOutlined, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    className: \"saveDiv\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(Button, {\n    title: \"Save\",\n    type: \"primary\",\n    shape: \"round\",\n    icon: React.createElement(SaveOutlined, {\n      style: {\n        fontSize: '18px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }),\n    onClick: props.handleDrawSave,\n    disabled: props.drawController === null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"deleteDiv\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(Button, {\n    title: \"Cancel\",\n    type: \"primary\",\n    shape: \"round\",\n    icon: React.createElement(DeleteOutlined, {\n      style: {\n        fontSize: '18px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }),\n    onClick: props.handleClickedCancel,\n    disabled: props.drawController === null && !props.addingNeighbor && !props.combiningPrecinct,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"undoDiv\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(Button, {\n    title: \"Undo\",\n    type: \"primary\",\n    shape: \"round\",\n    icon: React.createElement(UndoOutlined, {\n      style: {\n        fontSize: '18px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }),\n    onClick: props.handleDrawUndo,\n    disabled: props.drawController === null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  })), React.createElement(Dropdown, {\n    overlay: React.createElement(Menu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(Menu.Item, {\n      disabled: getSum(),\n      onClick: props.handleConfirmGhostPrecinct,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(AliwangwangOutlined, {\n      style: {\n        fontSize: '22px',\n        color: \"#996FCF\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), \" Confirm Ghost Precinct\"), React.createElement(Menu.Item, {\n      disabled: props.selectedPrecinct === null || props.drawController instanceof L.Draw.Polygon || props.addingNeighbor || props.combiningPrecinct || props.selectedPrecinct.geometry.type === \"MultiPolygon\",\n      onClick: props.handleEditPrecinctLayer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(FormOutlined, {\n      style: {\n        fontSize: '22px',\n        color: \"#ED7653\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), \" Edit Precinct Boundary\"), React.createElement(Menu.Item, {\n      disabled: props.selectedPrecinct === null || props.drawController || props.addingNeighbor,\n      onClick: props.handleCombinePrecinct,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(MergeCellsOutlined, {\n      style: {\n        fontSize: '22px',\n        color: \"#F0D55C\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), \"Combine Precincts\"), React.createElement(Menu.Item, {\n      disabled: props.selectedPrecinct === null || props.drawController || props.combiningPrecinct,\n      onClick: props.handleAddNeighbor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(UsergroupAddOutlined, {\n      style: {\n        fontSize: '22px',\n        color: \"#6c93df\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }), \"Add Precinct Neighbor\"), React.createElement(Menu.Item, {\n      disabled: props.selectedPrecinct === null || props.drawController || props.combiningPrecinct,\n      onClick: props.handleRemoveNeighbor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(UsergroupDeleteOutlined, {\n      style: {\n        fontSize: '22px',\n        color: \"#FE7274\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }), \"Remove Precinct Neighbor\"), React.createElement(Menu.Item, {\n      disabled: props.selectedPrecinct === null || props.selectedPrecinct.geometry.type !== \"MultiPolygon\" || props.drawController || props.addingNeighbor || props.combiningPrecinct,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(SplitCellsOutlined, {\n      style: {\n        fontSize: '22px',\n        color: \"#59D6B9\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }), \"Split MultiPolygon to Polygon\")),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"editDiv\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"primary\",\n    icon: React.createElement(EditOutlined, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }),\n    shape: \"round\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, \"\\xA0\\xA0\\xA0Edit\\xA0\\xA0\\xA0\"))));\n}","map":{"version":3,"sources":["C:/Users/mandy/IdeaProjects/DataQuality-Frontend/src/components/map/HeaderPanel/HeaderPanel.js"],"names":["React","useContext","useState","L","Button","Menu","Dropdown","DownOutlined","AliwangwangOutlined","MergeCellsOutlined","UsergroupAddOutlined","UndoOutlined","EditOutlined","DeleteOutlined","SaveOutlined","EnvironmentOutlined","CalendarOutlined","FormOutlined","SplitCellsOutlined","UsergroupDeleteOutlined","StateContext","Constants","message","HeaderPanel","props","selectedState","selectedElection","setSelectedElection","ELECTIONS","getSum","sum","selectedPrecinct","name","includes","i","demographic","key","handleStateChangeDropdown","STATES","map","state","election","info","fontSize","handleDrawSave","drawController","handleClickedCancel","addingNeighbor","combiningPrecinct","handleDrawUndo","handleConfirmGhostPrecinct","color","Draw","Polygon","geometry","type","handleEditPrecinctLayer","handleCombinePrecinct","handleAddNeighbor","handleRemoveNeighbor"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport L from 'leaflet';\r\nimport { Button, Menu, Dropdown } from 'antd';\r\nimport {\r\n    DownOutlined, AliwangwangOutlined, MergeCellsOutlined, UsergroupAddOutlined,\r\n    UndoOutlined, EditOutlined, DeleteOutlined, SaveOutlined,\r\n    EnvironmentOutlined, CalendarOutlined, FormOutlined,\r\n    SplitCellsOutlined, UsergroupDeleteOutlined\r\n} from '@ant-design/icons';\r\nimport StateContext from 'contexts/StateContext';\r\nimport * as Constants from 'constants/constants';\r\nimport { message } from 'antd';\r\n\r\nexport default function HeaderPanel(props) {\r\n    const selectedState = useContext(StateContext);\r\n    const [selectedElection, setSelectedElection] = useState(Constants.ELECTIONS[0]);\r\n\r\n    function getSum() {\r\n        let sum = 0;\r\n        if (props.selectedPrecinct) {\r\n            if (props.selectedPrecinct.name.includes(\"Potential\")) {\r\n                for (let i in props.selectedPrecinct.demographic) {\r\n                    sum += props.selectedPrecinct.demographic[i];\r\n                }\r\n                return sum;\r\n            }\r\n        }\r\n        return 1;\r\n\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Dropdown\r\n                overlay={\r\n                    <Menu onClick={({ key }) => props.handleStateChangeDropdown(key)}>\r\n                        {\r\n                            Constants.STATES.map(state => {\r\n                                return (\r\n                                    <Menu.Item key={state}>\r\n                                        <EnvironmentOutlined />{state}\r\n                                    </Menu.Item>\r\n                                );\r\n                            }\r\n                            )\r\n                        }\r\n                    </Menu>\r\n                }\r\n            >\r\n                <div className=\"locationDiv\">\r\n                    <Button\r\n                        type=\"primary\"\r\n                        icon={<EnvironmentOutlined />}\r\n                        shape=\"round\"\r\n                    >\r\n                        {(selectedState && selectedState.name) || 'Select a State'} <DownOutlined />\r\n                    </Button>\r\n                </div>\r\n            </Dropdown>\r\n            <Dropdown\r\n                overlay={\r\n                    <Menu onClick={({ key }) => setSelectedElection(key)}>\r\n                        {\r\n                            Constants.ELECTIONS.map((election) => {\r\n                                message.info(selectedElection);\r\n                                return (\r\n                                    <Menu.Item key={election}>\r\n                                        <CalendarOutlined /> {election}\r\n                                    </Menu.Item>\r\n                                );\r\n                            }\r\n                            )\r\n                        }\r\n                    </Menu>\r\n                }\r\n            >\r\n                <div className=\"electionDiv\">\r\n                    <Button\r\n                        type=\"primary\"\r\n                        icon={<CalendarOutlined />}\r\n                        shape=\"round\"\r\n                    >\r\n                        {selectedElection} <DownOutlined />\r\n                    </Button>\r\n                </div>\r\n            </Dropdown>\r\n            <div className=\"saveDiv\">\r\n                <Button\r\n                    title=\"Save\"\r\n                    type=\"primary\"\r\n                    shape=\"round\"\r\n                    icon={<SaveOutlined\r\n                        style={{ fontSize: '18px' }} />}\r\n                    onClick={props.handleDrawSave}\r\n                    disabled={props.drawController === null}\r\n                />\r\n            </div>\r\n            <div className=\"deleteDiv\">\r\n                <Button\r\n                    title=\"Cancel\"\r\n                    type=\"primary\"\r\n                    shape=\"round\"\r\n                    icon={<DeleteOutlined\r\n                        style={{ fontSize: '18px' }} />}\r\n                    onClick={props.handleClickedCancel}\r\n                    disabled={\r\n                        props.drawController === null\r\n                        && !props.addingNeighbor\r\n                        && !props.combiningPrecinct\r\n                    }\r\n                />\r\n            </div>\r\n            <div className=\"undoDiv\">\r\n                <Button\r\n                    title=\"Undo\"\r\n                    type=\"primary\"\r\n                    shape=\"round\"\r\n                    icon={<UndoOutlined\r\n                        style={{ fontSize: '18px' }} />}\r\n                    onClick={props.handleDrawUndo}\r\n                    disabled={props.drawController === null}\r\n                />\r\n            </div>\r\n\r\n            <Dropdown\r\n                overlay={\r\n                    <Menu>\r\n                        <Menu.Item\r\n                            disabled={\r\n                                getSum()\r\n                            }\r\n                            onClick={props.handleConfirmGhostPrecinct}\r\n                        >\r\n                            <AliwangwangOutlined style={{ fontSize: '22px', color: \"#996FCF\" }} /> Confirm Ghost Precinct\r\n                        </Menu.Item>\r\n                        <Menu.Item\r\n                            disabled={\r\n                                props.selectedPrecinct === null\r\n                                || props.drawController instanceof L.Draw.Polygon\r\n                                || props.addingNeighbor\r\n                                || props.combiningPrecinct\r\n                                || props.selectedPrecinct.geometry.type === \"MultiPolygon\"\r\n                            }\r\n                            onClick={props.handleEditPrecinctLayer}\r\n                        >\r\n                            <FormOutlined style={{ fontSize: '22px', color: \"#ED7653\" }} /> Edit Precinct Boundary\r\n                        </Menu.Item>\r\n                        <Menu.Item\r\n                            disabled={\r\n                                props.selectedPrecinct === null\r\n                                || props.drawController\r\n                                || props.addingNeighbor\r\n                            }\r\n                            onClick={props.handleCombinePrecinct}\r\n                        >\r\n                            <MergeCellsOutlined style={{ fontSize: '22px', color: \"#F0D55C\" }} />Combine Precincts\r\n                        </Menu.Item>\r\n                        <Menu.Item\r\n                            disabled={\r\n                                props.selectedPrecinct === null\r\n                                || props.drawController\r\n                                || props.combiningPrecinct\r\n                            }\r\n                            onClick={props.handleAddNeighbor}\r\n                        >\r\n                            <UsergroupAddOutlined style={{ fontSize: '22px', color: \"#6c93df\" }} />Add Precinct Neighbor\r\n                        </Menu.Item>\r\n                        <Menu.Item\r\n                            disabled={\r\n                                props.selectedPrecinct === null\r\n                                || props.drawController\r\n                                || props.combiningPrecinct\r\n                            }\r\n                            onClick={props.handleRemoveNeighbor}\r\n                        >\r\n                            <UsergroupDeleteOutlined style={{ fontSize: '22px', color: \"#FE7274\" }} />Remove Precinct Neighbor\r\n                        </Menu.Item>\r\n                        <Menu.Item\r\n                            disabled={\r\n                                props.selectedPrecinct === null\r\n                                || props.selectedPrecinct.geometry.type !== \"MultiPolygon\"\r\n                                || props.drawController\r\n                                || props.addingNeighbor\r\n                                || props.combiningPrecinct\r\n                            }\r\n                        >\r\n                            <SplitCellsOutlined style={{ fontSize: '22px', color: \"#59D6B9\" }} />Split MultiPolygon to Polygon\r\n                        </Menu.Item>\r\n                    </Menu>\r\n                }\r\n            >\r\n                <div className=\"editDiv\">\r\n                    <Button\r\n                        type=\"primary\"\r\n                        icon={<EditOutlined />}\r\n                        shape=\"round\"\r\n                    >\r\n                        &nbsp;&nbsp;&nbsp;Edit&nbsp;&nbsp;&nbsp;\r\n                    </Button>\r\n                </div>\r\n            </Dropdown>\r\n        </React.Fragment>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}