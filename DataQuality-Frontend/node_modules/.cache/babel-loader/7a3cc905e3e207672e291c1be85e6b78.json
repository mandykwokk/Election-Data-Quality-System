{"ast":null,"code":"import Axios from 'axios';\nimport { message } from 'antd';\nexport default class PrecinctRequester {\n  async updateName(precinctId, newName) {\n    const config = {\n      header: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      await Axios.post(`/precinct/${precinctId}/name`, {\n        name: newName\n      }, config);\n      return true;\n    } catch (error) {\n      console.log(error);\n      return false;\n    }\n  }\n\n  async addNewPrecinct(precinct) {\n    try {\n      let res = await Axios.post(`/precinct/generate`, precinct);\n      return res.data;\n    } catch (error) {\n      console.log(error);\n      return false;\n    }\n  }\n\n  async updateDemographic(precinctId, demographic, toPropagate) {\n    message.info(\"updateDemo \" + toPropagate);\n\n    try {\n      message.info(\"updateDemo: \" + toPropagate);\n      await Axios.post(`/precinct/demo/${precinctId}/${toPropagate}`, demographic);\n      return true;\n    } catch (error) {\n      console.log(error);\n      return false;\n    }\n  }\n\n  async updateGhostPrecinct(precinctId) {\n    try {\n      await Axios.post(`/precinct/${precinctId}/ghost`);\n      return true;\n    } catch (error) {\n      console.log(error);\n      return false;\n    }\n  }\n\n  async updateBoundary(precinctId, newBoundary) {\n    message.info(\"updateBoundary\");\n    const config = {\n      header: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      await Axios.post(`/precinct/${precinctId}/boundary`, {\n        geojson: newBoundary\n      }, config);\n      return true;\n    } catch (error) {\n      console.log(error);\n      return false;\n    }\n  }\n\n  async updateNeighbor(precinctId, targetId, addingNeighbor) {\n    message.info(\"updateNeighbor\");\n\n    try {\n      let add;\n      if (addingNeighbor) add = 1;else add = 0;\n      await Axios.post(`/precinct/${precinctId}/neighbor`, {\n        targetPrecinctId: targetId,\n        toAdd: add\n      });\n      return true;\n    } catch (error) {\n      console.log(error);\n      return false;\n    }\n  }\n\n  async updateElection(precinctId, electionJson, districtElectionJson, stateElectionJson, toPropagate) {\n    message.info(\"updateElection\");\n\n    try {\n      await Axios.post(`/precinct/election/${precinctId}/${toPropagate}`, {\n        electionJson: electionJson,\n        districtElectionJson: districtElectionJson,\n        stateElectionJson: stateElectionJson\n      });\n      return true;\n    } catch (error) {\n      console.log(error);\n      return false;\n    }\n  }\n\n  async updateOriginalBoundary(precinctId, newBoundary) {\n    message.info(\"updateOriginalBoundary\");\n    const config = {\n      header: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      await Axios.post(`/precinct/original-boundary/${precinctId}`, {\n        geojson: newBoundary\n      }, config);\n      return true;\n    } catch (error) {\n      console.log(error);\n      return false;\n    }\n  }\n\n  async updateMergePrecinct(precinct, clickedPrecinctId) {\n    try {\n      const config = {\n        header: {\n          'Content-Type': 'application/json'\n        }\n      };\n      message.info(\"passed precinct: \" + JSON.stringify(JSON.parse(precinct)));\n      let res = await Axios.post(`/precinct/merge/${clickedPrecinctId}`, config);\n      return res.data;\n    } catch (error) {\n      console.log(error);\n      return false;\n    }\n  }\n\n}","map":{"version":3,"sources":["C:/Users/mandy/IdeaProjects/DataQuality-Frontend/src/requesters/PrecinctRequester.js"],"names":["Axios","message","PrecinctRequester","updateName","precinctId","newName","config","header","post","name","error","console","log","addNewPrecinct","precinct","res","data","updateDemographic","demographic","toPropagate","info","updateGhostPrecinct","updateBoundary","newBoundary","geojson","updateNeighbor","targetId","addingNeighbor","add","targetPrecinctId","toAdd","updateElection","electionJson","districtElectionJson","stateElectionJson","updateOriginalBoundary","updateMergePrecinct","clickedPrecinctId","JSON","stringify","parse"],"mappings":"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","sourcesContent":["import Axios from 'axios';\r\nimport { message } from 'antd';\r\n\r\nexport default class PrecinctRequester {\r\n\r\n    async updateName(precinctId, newName) {\r\n        const config = { header: { 'Content-Type': 'application/json' } };\r\n        try {\r\n            await Axios.post(`/precinct/${precinctId}/name`, { name : newName}, config);\r\n            return true;\r\n        }\r\n        catch (error) {\r\n            console.log(error);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    async addNewPrecinct(precinct) {\r\n        try {\r\n            let res = await Axios.post(`/precinct/generate`, precinct);\r\n            return res.data;\r\n        }\r\n        catch (error) {\r\n            console.log(error);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    async updateDemographic(precinctId, demographic, toPropagate) {\r\n     message.info(\"updateDemo \"+toPropagate);\r\n        try {\r\n            message.info(\"updateDemo: \"+toPropagate)\r\n            await Axios.post(`/precinct/demo/${precinctId}/${toPropagate}`, demographic);\r\n            return true;\r\n        }\r\n        catch (error) {\r\n            console.log(error);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    async updateGhostPrecinct(precinctId) {\r\n        try {\r\n            await Axios.post(`/precinct/${precinctId}/ghost`);\r\n            return true;\r\n        } catch (error) {\r\n            console.log(error);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    async updateBoundary(precinctId, newBoundary) {\r\n        message.info(\"updateBoundary\");\r\n        const config = { header: { 'Content-Type': 'application/json' } };\r\n        try {\r\n            await Axios.post(`/precinct/${precinctId}/boundary`, { geojson: newBoundary }, config);\r\n            return true;\r\n        } catch (error) {\r\n            console.log(error);\r\n            return false;\r\n        }\r\n    }\r\n    \r\n    async updateNeighbor(precinctId, targetId, addingNeighbor) {\r\n        message.info(\"updateNeighbor\")\r\n        try {\r\n            let add;\r\n            if(addingNeighbor)\r\n                add = 1;\r\n            else\r\n                add = 0;\r\n            await Axios.post(`/precinct/${precinctId}/neighbor`, {targetPrecinctId: targetId, toAdd: add});\r\n            return true;\r\n        }\r\n        catch (error) {\r\n            console.log(error);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    async updateElection(precinctId, electionJson, districtElectionJson, stateElectionJson, toPropagate) {\r\n        message.info(\"updateElection\");\r\n        try {\r\n            await Axios.post(`/precinct/election/${precinctId}/${toPropagate}`, {electionJson: electionJson, districtElectionJson:districtElectionJson, stateElectionJson: stateElectionJson});\r\n            return true;\r\n        }\r\n        catch (error) {\r\n            console.log(error);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    async updateOriginalBoundary(precinctId, newBoundary) {\r\n        message.info(\"updateOriginalBoundary\");\r\n        const config = { header: { 'Content-Type': 'application/json' } };\r\n        try {\r\n            await Axios.post(`/precinct/original-boundary/${precinctId}`, { geojson: newBoundary }, config);\r\n            return true;\r\n        } catch (error) {\r\n            console.log(error);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    async updateMergePrecinct(precinct, clickedPrecinctId) {\r\n        try {\r\n            const config = { header: { 'Content-Type': 'application/json' } };\r\n            message.info(\"passed precinct: \"+JSON.stringify(JSON.parse(precinct)))\r\n            let res = await Axios.post(`/precinct/merge/${clickedPrecinctId}`, config);\r\n            return res.data;\r\n        }\r\n        catch (error) {\r\n            console.log(error);\r\n            return false;\r\n        }\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}