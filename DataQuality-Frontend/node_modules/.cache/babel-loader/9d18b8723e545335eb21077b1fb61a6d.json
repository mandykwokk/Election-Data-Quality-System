{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mandy\\\\IdeaProjects\\\\DataQuality-Frontend\\\\src\\\\components\\\\map\\\\RightPanel\\\\CommentTab.js\";\nimport React, { useState } from 'react';\nimport { Comment, Avatar, Form, Button, List, Input, Tooltip, Drawer, message } from 'antd';\nimport { UserOutlined, CommentOutlined } from '@ant-design/icons';\nimport moment from 'moment';\nimport HistoryRequester from 'requesters/HistoryRequester';\nconst {\n  TextArea\n} = Input;\nconst historyRequester = new HistoryRequester();\nexport default function CommentTab(props) {\n  const [rerender, setRerender] = useState(false);\n\n  async function handleSubmitComment(values) {\n    let comment = {\n      content: values['comment']\n    };\n    comment.timestamp = moment();\n\n    if (await historyRequester.postComment(comment, props.selectedHistory.id)) {\n      message.success(\"Sucessfuly added comment.\");\n      props.selectedHistory.comments.unshift(comment);\n      setRerender(!rerender);\n    } else {\n      message.error(\"Failed to add comment.\");\n    } // props.selectedPrecinct.properties.comments.unshift(\n    //     {\n    //         content: values['comment'],\n    //         datetime: moment()\n    //     }\n    // );\n    // setRerender(!rerender);\n\n  }\n\n  ;\n\n  if (!props.selectedHistory) {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(Drawer, {\n    title: \"Comments\",\n    placement: \"right\",\n    closable: true,\n    onClose: props.handleCloseCommentTab,\n    visible: props.showCommentTab,\n    width: 500,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Form, {\n    onFinish: handleSubmitComment,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(CommentOutlined, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), \" Comments\"), React.createElement(Form.Item, {\n    name: \"comment\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(TextArea, {\n    rows: 4,\n    placeholder: \"Enter your comment\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })), React.createElement(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Button, {\n    htmlType: \"submit\",\n    type: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Add Comment\"))), React.createElement(List, {\n    dataSource: props.selectedHistory.comments,\n    header: props.selectedHistory.comments ? `${props.selectedHistory.comments.length} comments` : `0 comment`,\n    itemLayout: \"horizontal\",\n    renderItem: (item, index) => React.createElement(Comment, {\n      key: index,\n      avatar: React.createElement(Avatar, {\n        icon: React.createElement(UserOutlined, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }),\n      content: item.content,\n      datetime: React.createElement(Tooltip, {\n        title: moment(item.timestamp).format('YYYY-MM-DD HH:mm:ss'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, moment(item.timestamp).fromNow())),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }))));\n}","map":{"version":3,"sources":["C:/Users/mandy/IdeaProjects/DataQuality-Frontend/src/components/map/RightPanel/CommentTab.js"],"names":["React","useState","Comment","Avatar","Form","Button","List","Input","Tooltip","Drawer","message","UserOutlined","CommentOutlined","moment","HistoryRequester","TextArea","historyRequester","CommentTab","props","rerender","setRerender","handleSubmitComment","values","comment","content","timestamp","postComment","selectedHistory","id","success","comments","unshift","error","handleCloseCommentTab","showCommentTab","length","item","index","format","fromNow"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Comment, Avatar, Form, Button, List, Input, Tooltip, Drawer, message } from 'antd';\r\nimport { UserOutlined, CommentOutlined } from '@ant-design/icons';\r\nimport moment from 'moment';\r\nimport HistoryRequester from 'requesters/HistoryRequester';\r\n\r\nconst { TextArea } = Input;\r\nconst historyRequester = new HistoryRequester();\r\n\r\nexport default function CommentTab(props) {\r\n\r\n    const [rerender, setRerender] = useState(false);\r\n\r\n    async function handleSubmitComment(values) {\r\n        let comment = {content: values['comment']};\r\n        comment.timestamp = moment();\r\n        if (await historyRequester.postComment(comment, props.selectedHistory.id)) {\r\n            message.success (\"Sucessfuly added comment.\");\r\n            props.selectedHistory.comments.unshift(comment);\r\n            setRerender(!rerender);\r\n        }\r\n        else {\r\n            message.error (\"Failed to add comment.\")\r\n        }\r\n        // props.selectedPrecinct.properties.comments.unshift(\r\n        //     {\r\n        //         content: values['comment'],\r\n        //         datetime: moment()\r\n        //     }\r\n        // );\r\n        // setRerender(!rerender);\r\n    };\r\n\r\n    if (!props.selectedHistory) {\r\n        return <React.Fragment />;\r\n    }\r\n\r\n    return (\r\n        <Drawer\r\n            title=\"Comments\"\r\n            placement=\"right\"\r\n            closable={true}\r\n            onClose={props.handleCloseCommentTab}\r\n            visible={props.showCommentTab}\r\n            width={500}\r\n        >\r\n        <React.Fragment>\r\n            <div>\r\n                <Form onFinish={handleSubmitComment}>\r\n                    <h1><CommentOutlined /> Comments</h1>\r\n                    <Form.Item name=\"comment\">\r\n                        <TextArea rows={4} placeholder={\"Enter your comment\"} />\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        <Button htmlType=\"submit\" type=\"primary\">\r\n                            Add Comment\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n                <List\r\n                    dataSource={props.selectedHistory.comments}\r\n                    header={props.selectedHistory.comments\r\n                                ? `${props.selectedHistory.comments.length} comments`\r\n                                : `0 comment`}\r\n                    itemLayout=\"horizontal\"\r\n                    renderItem={(item, index) => \r\n                        <Comment\r\n                            key={index}\r\n                            avatar={<Avatar icon={<UserOutlined />} />}\r\n                            content={item.content}\r\n                            datetime={ \r\n                                <Tooltip title={moment(item.timestamp).format('YYYY-MM-DD HH:mm:ss')}>\r\n                                    <span>{moment(item.timestamp).fromNow()}</span>\r\n                                </Tooltip>\r\n                            }\r\n                        />\r\n                    }\r\n                />\r\n            </div>\r\n        </React.Fragment>\r\n        </Drawer>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}